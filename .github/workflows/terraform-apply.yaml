name: "Terraform with Checkov - Security Scan and Apply"
 
on:
 workflow_dispatch:
 
env:
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
 terraform:
   name: "Terraform with Checkov - Security Scan and Apply"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
 
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2
     - name: Setup SSH key
       run: |
         echo "${{ secrets.EC2_KEY_PAIR }}" > key.pem
         chmod 400 key.pem
 
     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.3.0
     
     - name: Terraform init
       run: terraform init 

     - name: Run Checkov for security scanning
       uses: bridgecrewio/checkov-action@master
       with:
        directory: .
        framework: terraform
        soft_fail: true
       continue-on-error: false
 
     - name: Terraform plan
       id: plan
       run: terraform plan
       continue-on-error: false
    
     - name: Terraform Plan Status
       if: steps.plan.outcome == 'failure'
       run: exit 1
 
     - name: Terraform Apply
       run: |
         terraform apply -auto-approve -input=false
         terraform output -json > tf-output.json
         jq -r '
          to_entries[] |
          "\(.key) = \(if (.value.value | type == "string") then
                         "\"\(.value.value)\""
                       elif (.value.value | type == "array") or (.value.value | type == "object") then
                         "\(.value.value | @json)"
                       else
                         .value.value
                       end)"
          ' tf-output.json > tf-output.auto.tfvars
         
     - name: Upload tfvars
       uses: actions/upload-artifact@v4
       with:
         name: tf-output
         path: tf-output.auto.tfvars
